<?xml version="1.0" encoding="UTF-8"?>
<project name="erlang">
    <dirname property="erlang.basedir" file="${ant.file.erlang}"/>

    <property name="erlang.cache" value="${erlang.basedir}/cache/erlang"/>
    <property name="erlang.cache.lib" value="${erlang.basedir}/cache/lib/erlang/lib"/>

    <!-- Get tarball from github because erlang.org has an invalid certificate for https -->
    <property name="erlang.download.url" value="https://github.com/erlang/otp/archive"/>
    <property name="erlang.output.dir" value="${erlang.basedir}/dependencies/erlang"/>
    <property name="erlang.version" value="17.4"/>
    <available file="${erlang.output.dir}/OTP-${erlang.version}.tar.gz" property="erlang.tarball.available"/>

    <available file="${erlang.cache}" property="erlang.cache.available"/>
    <available file="${erlang.cache}/configure" property="erlang.cache.configure.available"/>
    <available file="${erlang.cache}/Makefile" property="erlang.cache.makefile.available"/>
    <available file="${erlang.basedir}/cache/bin/erl" property="erlang.cache.bin.erl.available"/>

    <target name="autoconf.erlang" depends="get.erlang" unless="erlang.cache.configure.available">
        <chmod perm="a+x">
            <filelist dir="${erlang.cache}">
                <file name="otp_build"/>
            </filelist>
            <filelist dir="${erlang.cache}/erts/autoconf">
                <file name="config.guess"/>
                <file name="install-sh"/>
            </filelist>
        </chmod>
        <!-- dir is the direct in which to run the command, but executable requires full path or executable to be on
             PATH.  executable is not looked for in dir. -->
        <exec dir="${erlang.cache}" executable="${erlang.cache}/otp_build">
            <arg value="autoconf"/>
        </exec>
    </target>

    <target name="configure.erlang" depends="autoconf.erlang" unless="erlang.cache.makefile.available">
        <exec dir="${erlang.cache}" executable="${erlang.cache}/configure">
            <arg value="--prefix"/>
            <arg value="${erlang.basedir}/cache"/>
        </exec>
    </target>

    <target name="clean.erlang">
        <delete quiet="true">
            <fileset dir="${erlang.output.dir}"/>
            <fileset dir="${erlang.cache}"/>
        </delete>
    </target>

    <target name="get.erlang" depends="unpack.erlang.tarball" description="Get erlang/otp from Github" unless="erlang.cache.available">
        <copy todir="${erlang.cache}">
            <fileset dir="${erlang.output.tarball.root.dir}"/>
        </copy>
    </target>

    <target name="get.erlang.tarball" description="Get OTP-${erlang.version}.tar.gz from Github" unless="erlang.tarball.available">
        <mkdir dir="${erlang.output.dir}"/>
        <get dest="${erlang.output.dir}"
             src="${erlang.download.url}/OTP-${erlang.version}.tar.gz"
             usetimestamp="true"
             verbose="true"/>
    </target>

    <target name="install.erlang" depends="make.erlang" unless="erlang.cache.bin.erl.available">
        <chmod perm="a+x">
            <filelist dir="${erlang.cache}">
                <file name="erts/autoconf/config.sub"/>
                <file name="lib/diameter/bin/diameterc"/>
                <file name="make/install_bin"/>
            </filelist>
        </chmod>
        <exec dir="${erlang.cache}" executable="make">
            <arg value="install"/>
        </exec>
    </target>

    <target name="make.erlang" depends="configure.erlang" unless="erlang.cache.bin.erl.available">
        <chmod perm="a+x">
            <filelist dir="${erlang.cache}">
                <file name="erts/autoconf/config.sub"/>
                <file name="erts/emulator/utils/gen_git_version"/>
                <file name="lib/diameter/bin/diameterc"/>
            </filelist>
        </chmod>
        <exec dir="${erlang.cache}" executable="make"/>
    </target>

    <target name="unpack.erlang.tarball" depends="get.erlang.tarball" description="tar -xvfz OTP-${erlang.version}.tar.gz">
        <untar compression="gzip" src="${erlang.output.dir}/OTP-${erlang.version}.tar.gz" dest="${erlang.output.dir}"/>
        <path id="erlang.output.tarball.root.path">
            <dirset dir="${erlang.output.dir}">
                <include name="otp-OTP-*"/>
            </dirset>
        </path>
        <property name="erlang.output.tarball.root.dir" refid="erlang.output.tarball.root.path"/>
    </target>
</project>