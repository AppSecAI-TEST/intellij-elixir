Elixir File(0,132)
  PsiComment(ElixirTokenType.COMMENT)('# EOL between positional argument and comma is invalid')(0,54)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(54,55)
    PsiElement(ElixirTokenType.EOL)('\n')(54,55)
  ElixirMatchedExpressionImpl(MATCHED_EXPRESSION)(55,65)
    ElixirNoParenthesesOneExpressionImpl(NO_PARENTHESES_ONE_EXPRESSION)(55,65)
      ElixirQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)(55,65)
        PsiElement(ElixirTokenType.IDENTIFIER)('identifier')(55,65)
  PsiWhiteSpace(' ')(65,66)
  ElixirAdjacentExpressionImpl(ADJACENT_EXPRESSION)(66,80)
    ElixirMatchedExpressionImpl(MATCHED_EXPRESSION)(66,80)
      ElixirNoParenthesesOneExpressionImpl(NO_PARENTHESES_ONE_EXPRESSION)(66,80)
        ElixirQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)(66,80)
          PsiElement(ElixirTokenType.IDENTIFIER)('first_argument')(66,80)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(80,81)
    PsiElement(ElixirTokenType.EOL)('\n')(80,81)
  PsiWhiteSpace('           ')(81,92)
  PsiErrorElement:<capture matched expression operation>, <capture tail expression operation>, <end of expression>, ElixirTokenType.., ElixirTokenType.;, ElixirTokenType.AND_OPERATOR, ElixirTokenType.ARROW_OPERATOR, ElixirTokenType.COMPARISON_OPERATOR, ElixirTokenType.EOL, ElixirTokenType.HAT_OPERATOR, ElixirTokenType.IN_MATCH_OPERATOR, ElixirTokenType.MATCH_OPERATOR, ElixirTokenType.MULTIPLICATION_OPERATOR, ElixirTokenType.OR_OPERATOR, ElixirTokenType.PIPE_OPERATOR, ElixirTokenType.RELATIONAL_OPERATOR, ElixirTokenType.TWO_OPERATOR, ElixirTokenType.TYPE_OPERATOR, ElixirTokenType.WHEN_OPERATOR or ElixirTokenType.in expected, got ','(92,93)
    PsiElement(ElixirTokenType.,)(',')(92,93)
  PsiWhiteSpace(' ')(93,94)
  PsiElement(ElixirTokenType.IDENTIFIER)('first_keyword_key')(94,111)
  PsiElement(ElixirTokenType.KEYWORD_PAIR_COLON)(':')(111,112)
  PsiWhiteSpace(' ')(112,113)
  PsiElement(ElixirTokenType.IDENTIFIER)('first_keyword_value')(113,132)