#
# whenOperation(value)
#

# normal
0x1 when 0x1

# ...with newlines
0x1
when
0x1

# right associative
# should parse as 0o3 when (0x3 when 0b11)
0o3 when 0x3 when 0b11

# whenOperation(unaryOperation(value))
# should parse as 0x1 when (~~~0x1)
0x1 when ~~~0x1

# whenOperation(hatOperation(value))
# should parse as (0x1 ^^^ 0x2) when (0x2 ^^^ 0x1)
0x1 ^^^ 0x2 when 0x2 ^^^ 0x1

# whenOperation(multiplicationOperation(value))
# should parse as (0x1 * 0x2) when (0x2 * 0x1)
0x1 * 0x2 when 0x2 * 0x1

# whenOperation(additionOperation(value))
# should parse as 0x3 when (0x1 + 0x2)
0x3 when 0x1 + 0x2

# whenOperation(twoOperation(value))
# should parse as (0x1..0x2) when (0x3..0x4)
0x1..0x2 when 0x3..0x4

# whenOperation(arrowOperation(value))
# should parse as ('a' |> 'b') when ('c' |> 'd')
'a' |> 'b' when 'c' |> 'd'

# whenOperation(relationalOperation(value))
# should parse as (0x1 < 0x2) when (0x2 > 0x1)
0x1 < 0x2 when 0x2 > 0x1

# whenOperation(comparisonOperation(value))
# should parse as (0x1 != 0x2) when (0x1 == 0x1)
0x1 != 0x2 when 0x1 == 0x1

# whenOperation(andOperation(value))
# should parse as (0x1 &&& 0x2) when (0x2 &&& 0x1)
0x1 &&& 0x2 when 0x2 &&& 0x1

# whenOperation(orOperation(value))
# should parse as (0x1 ||| 0x2) when (0x2 ||| 0x1)
0x1 ||| 0x2 when 0x2 ||| 0x1

# whenOperation(matchOperation(value))
# should parse as (0x1 = 0x1) when (0x2 = 0x2)
0x1 = 0x1 when 0x2 = 0x2

# whenOperation(associationOperation(value))
# should parse as (0x1 => 0x2) when (0x3 => 0x4)
0x1 => 0x2 when 0x3 => 0x4

# whenOperation(pipeOperation(value))
# should parse as (0x1 | 0x2) when (0x3 | 0x4)
0x1 | 0x2 when 0x3 | 0x4

# whenOperation(typeOperation(value))
# should parse as (0x1 :: 0x2) when (0x3 :: 0x4)
0x1 :: 0x2 when 0x3 :: 0x4
