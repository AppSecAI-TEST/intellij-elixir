#
# relationalOperation(value)
#

# normal
0x1 < 0x2
0x1 <= 0x2
0x2 > 0x1
0x2 >= 0x1

# ...with newlines
0x1
<
0x2

# left associative
# should parse as (0x1 < (0x2 <= (0x2 > (0x1 >= 0x0))))
0x1 < 0x2 <= 0x2 > 0x1 >= 0x0

# relationalOperation(atOperation(value))
# should parse as (@0x1) < (@0x2)
@0x1 < @0x2

# relationalOperation(unaryOperation(value))
# should parse as 0x1 < (~~~0x1)
0x1 < ~~~0x1

# relationalOperation(hatOperation(value))
# should parse as 0x1 < (0x1 ^^^ 0x2)
0x1 < 0x1 ^^^ 0x2

# relationalOperation(multiplicationOperation(value))
# should parse as (0x5 / 0x2) < (0x5 * 0x2)
0x5 / 0x2 < 0x5 * 0x2

# relationalOperation(additionOperation(value))
# should parse as (0x1 - 0x2) < (0x3 + 0x4)
0x1 - 0x2 < 0x3 + 0x4

# relationalOperation(twoOperation(value))
# should parse as (0x1..0x3) < (0x1..0x4)
0x1..0x3 < 0x1..0x4

# relationalOperation(inOperation(identifier))
# should parse as (a in b) < (c in d)
a in b < c in d

# relationalOperation(arrowOperation(value))
# should parse as (0x1 |> 0x2) > 0x3
0x1 |> 0x2 > 0x3