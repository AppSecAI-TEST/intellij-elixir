#
# matchOperation(value)
#

# normal
0x1 = 0x1

# ...with newlines
0x1
=
0x1

# right associative
# should parse as 0o3 = (0x3 = 0b11)
0o3 = 0x3 = 0b11

# matchOperation(atOperation(value))
# should parse as (@0x1) = (@0x2)
@0x1 = @0x2

# matchOperation(unaryOperation(value))
# should parse as 0x1 = (~~~0x1)
0x1 = ~~~0x1

# matchOperation(hatOperation(value))
# should parse as (0x1 ^^^ 0x2) = (0x2 ^^^ 0x1)
0x1 ^^^ 0x2 = 0x2 ^^^ 0x1

# matchOperation(multiplicationOperation(value))
# should parse as (0x1 * 0x2) = (0x2 * 0x1)
0x1 * 0x2 = 0x2 * 0x1

# matchOperation(additionOperation(value))
# should parse as 0x3 = (0x1 + 0x2)
0x3 = 0x1 + 0x2

# matchOperation(twoOperation(value))
# should parse as (0x1..0x2) = (0x3..0x4)
0x1..0x2 = 0x3..0x4

# matchOperation(arrowOperation(value))
# should parse as ('a' |> 'b') = ('c' |> 'd')
'a' |> 'b' = 'c' |> 'd'

# matchOperation(relationalOperation(value))
# should parse as (0x1 < 0x2) = (0x2 > 0x1)
0x1 < 0x2 = 0x2 > 0x1

# matchOperation(comparisonOperation(value))
# should parse as (0x1 != 0x2) = (0x1 == 0x1)
0x1 != 0x2 = 0x1 == 0x1

# matchOperation(andOperation(value))
# should parse as (0x1 &&& 0x2) = (0x2 &&& 0x1)
0x1 &&& 0x2 = 0x2 &&& 0x1

# matchOperation(orOperation(value))
# should parse as (0x1 ||| 0x2) = (0x2 ||| 0x1)
0x1 ||| 0x2 = 0x2 ||| 0x1
