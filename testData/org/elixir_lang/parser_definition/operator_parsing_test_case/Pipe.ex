#
# pipeOperation(value)
#

# normal
0x1 | 0x1

# ...with newlines
0x1
|
0x1

# right associative
# should parse as 0o3 | (0x3 |0b11)
0o3 | 0x3 | 0b11

# pipeOperation(unaryOperation(value))
# should parse as 0x1 | (~~~0x1)
0x1 | ~~~0x1

# pipeOperation(hatOperation(value))
# should parse as (0x1 ^^^ 0x2) | (0x2 ^^^ 0x1)
0x1 ^^^ 0x2 | 0x2 ^^^ 0x1

# pipeOperation(multiplicationOperation(value))
# should parse as (0x1 * 0x2) | (0x2 * 0x1)
0x1 * 0x2 | 0x2 * 0x1

# pipeOperation(additionOperation(value))
# should parse as 0x3 | (0x1 + 0x2)
0x3 | 0x1 + 0x2

# pipeOperation(twoOperation(value))
# should parse as (0x1..0x2) | (0x3..0x4)
0x1..0x2 | 0x3..0x4

# pipeOperation(arrowOperation(value))
# should parse as ('a' |> 'b') | ('c' |> 'd')
'a' |> 'b' | 'c' |> 'd'

# pipeOperation(relationalOperation(value))
# should parse as (0x1 < 0x2) | (0x2 > 0x1)
0x1 < 0x2 | 0x2 > 0x1

# pipeOperation(comparisonOperation(value))
# should parse as (0x1 != 0x2) | (0x1 == 0x1)
0x1 != 0x2 | 0x1 == 0x1

# pipeOperation(andOperation(value))
# should parse as (0x1 &&& 0x2) | (0x2 &&& 0x1)
0x1 &&& 0x2 | 0x2 &&& 0x1

# pipeOperation(orOperation(value))
# should parse as (0x1 ||| 0x2) | (0x2 ||| 0x1)
0x1 ||| 0x2 | 0x2 ||| 0x1

# pipeOperation(matchOperation(value))
# should parse as (0x1 = 0x1) | (0x2 = 0x2)
0x1 = 0x1 | 0x2 = 0x2

# pipeOperation(associationOperation(value))
# should parse as (0x1 => 0x2) | (0x3 => 0x4)
0x1 => 0x2 | 0x3 => 0x4
