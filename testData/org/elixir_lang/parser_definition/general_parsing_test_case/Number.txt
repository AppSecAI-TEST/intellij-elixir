Elixir File(0,424)
  PsiComment(ElixirTokenType.COMMENT)('#')(0,1)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(1,2)
    PsiElement(ElixirTokenType.EOL)('\n')(1,2)
  PsiComment(ElixirTokenType.COMMENT)('# binary')(2,10)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(10,11)
    PsiElement(ElixirTokenType.EOL)('\n')(10,11)
  PsiComment(ElixirTokenType.COMMENT)('#')(11,12)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(12,13)
    PsiElement(ElixirTokenType.EOL)('\n')(12,13)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(13,14)
    PsiElement(ElixirTokenType.EOL)('\n')(13,14)
  PsiComment(ElixirTokenType.COMMENT)('# current')(14,23)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(23,24)
    PsiElement(ElixirTokenType.EOL)('\n')(23,24)
  ElixirValueImpl(VALUE)(24,28)
    PsiElement(ElixirTokenType.NUMBER)('0b01')(24,28)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(28,29)
    PsiElement(ElixirTokenType.EOL)('\n')(28,29)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(29,30)
    PsiElement(ElixirTokenType.EOL)('\n')(29,30)
  PsiComment(ElixirTokenType.COMMENT)('# obsolete')(30,40)
  ElixirEndOfExpressionImpl(END_OF_EXPRESSION)(40,41)
    PsiElement(ElixirTokenType.EOL)('\n')(40,41)
  ElixirValueImpl(VALUE)(41,42)
    PsiElement(ElixirTokenType.NUMBER)('0')(41,42)
  PsiErrorElement:<end of expression>, ElixirTokenType.AND_OPERATOR, ElixirTokenType.ARROW_OPERATOR, ElixirTokenType.ASSOCIATION_OPERATOR, ElixirTokenType.COMPARISON_OPERATOR, ElixirTokenType.HAT_OPERATOR, ElixirTokenType.IN_MATCH_OPERATOR, ElixirTokenType.MATCH_OPERATOR, ElixirTokenType.MULTIPLICATION_OPERATOR, ElixirTokenType.OR_OPERATOR, ElixirTokenType.PIPE_OPERATOR, ElixirTokenType.RELATIONAL_OPERATOR, ElixirTokenType.STAB_OPERATOR, ElixirTokenType.TWO_OPERATOR, ElixirTokenType.TYPE_OPERATOR or ElixirTokenType.WHEN_OPERATOR expected, got 'B01'(42,45)
    PsiElement(ElixirTokenType.ALIAS)('B01')(42,45)
  PsiElement(DUMMY_BLOCK)(45,83)
    PsiElement(ElixirTokenType.EOL)('\n')(45,46)
    PsiElement(ElixirTokenType.EOL)('\n')(46,47)
    PsiComment(ElixirTokenType.COMMENT)('#')(47,48)
    PsiElement(ElixirTokenType.EOL)('\n')(48,49)
    PsiComment(ElixirTokenType.COMMENT)('# decimal')(49,58)
    PsiElement(ElixirTokenType.EOL)('\n')(58,59)
    PsiComment(ElixirTokenType.COMMENT)('#')(59,60)
    PsiElement(ElixirTokenType.EOL)('\n')(60,61)
    PsiElement(ElixirTokenType.EOL)('\n')(61,62)
    PsiComment(ElixirTokenType.COMMENT)('# normal')(62,70)
    PsiElement(ElixirTokenType.EOL)('\n')(70,71)
    PsiElement(ElixirTokenType.NUMBER)('1234567890')(71,81)
    PsiElement(ElixirTokenType.EOL)('\n')(81,82)
    PsiElement(ElixirTokenType.EOL)('\n')(82,83)
  PsiComment(ElixirTokenType.COMMENT)('# zero prefix')(83,96)
  PsiElement(DUMMY_BLOCK)(96,147)
    PsiElement(ElixirTokenType.EOL)('\n')(96,97)
    PsiElement(ElixirTokenType.NUMBER)('0001')(97,101)
    PsiElement(ElixirTokenType.EOL)('\n')(101,102)
    PsiElement(ElixirTokenType.EOL)('\n')(102,103)
    PsiComment(ElixirTokenType.COMMENT)('# underscore separated')(103,125)
    PsiElement(ElixirTokenType.EOL)('\n')(125,126)
    PsiElement(ElixirTokenType.NUMBER)('100_000')(126,133)
    PsiElement(ElixirTokenType.EOL)('\n')(133,134)
    PsiElement(ElixirTokenType.NUMBER)('12_34_56_78')(134,145)
    PsiElement(ElixirTokenType.EOL)('\n')(145,146)
    PsiElement(ElixirTokenType.EOL)('\n')(146,147)
  PsiComment(ElixirTokenType.COMMENT)('# trailing underscore is invalid')(147,179)
  PsiElement(DUMMY_BLOCK)(179,239)
    PsiElement(ElixirTokenType.EOL)('\n')(179,180)
    PsiElement(ElixirTokenType.NUMBER)('100')(180,183)
    PsiElement(ElixirTokenType.IDENTIFIER)('_')(183,184)
    PsiElement(ElixirTokenType.EOL)('\n')(184,185)
    PsiElement(ElixirTokenType.EOL)('\n')(185,186)
    PsiComment(ElixirTokenType.COMMENT)('#')(186,187)
    PsiElement(ElixirTokenType.EOL)('\n')(187,188)
    PsiComment(ElixirTokenType.COMMENT)('# float')(188,195)
    PsiElement(ElixirTokenType.EOL)('\n')(195,196)
    PsiComment(ElixirTokenType.COMMENT)('#')(196,197)
    PsiElement(ElixirTokenType.EOL)('\n')(197,198)
    PsiElement(ElixirTokenType.EOL)('\n')(198,199)
    PsiComment(ElixirTokenType.COMMENT)('# invalid without leading integral part')(199,238)
    PsiElement(ElixirTokenType.EOL)('\n')(238,239)
  PsiElement(DUMMY_BLOCK)(239,332)
    PsiElement(BAD_CHARACTER)('.')(239,240)
    PsiElement(ElixirTokenType.NUMBER)('0')(240,241)
    PsiElement(ElixirTokenType.EOL)('\n')(241,242)
    PsiElement(ElixirTokenType.EOL)('\n')(242,243)
    PsiComment(ElixirTokenType.COMMENT)('# invalid without trailing fractional part')(243,285)
    PsiElement(ElixirTokenType.EOL)('\n')(285,286)
    PsiElement(ElixirTokenType.NUMBER)('0')(286,287)
    PsiElement(BAD_CHARACTER)('.')(287,288)
    PsiElement(ElixirTokenType.EOL)('\n')(288,289)
    PsiElement(ElixirTokenType.EOL)('\n')(289,290)
    PsiComment(ElixirTokenType.COMMENT)('# valid with integral and fractional part')(290,331)
    PsiElement(ElixirTokenType.EOL)('\n')(331,332)
  PsiElement(DUMMY_BLOCK)(332,418)
    PsiElement(ElixirTokenType.NUMBER)('0.0')(332,335)
    PsiElement(ElixirTokenType.EOL)('\n')(335,336)
    PsiElement(ElixirTokenType.EOL)('\n')(336,337)
    PsiComment(ElixirTokenType.COMMENT)('# valid with exponent without sign')(337,371)
    PsiElement(ElixirTokenType.EOL)('\n')(371,372)
    PsiElement(ElixirTokenType.NUMBER)('0.0e0')(372,377)
    PsiElement(ElixirTokenType.EOL)('\n')(377,378)
    PsiElement(ElixirTokenType.EOL)('\n')(378,379)
    PsiComment(ElixirTokenType.COMMENT)('# valid with exponent with sign')(379,410)
    PsiElement(ElixirTokenType.EOL)('\n')(410,411)
    PsiElement(ElixirTokenType.NUMBER)('0.0e+1')(411,417)
    PsiElement(ElixirTokenType.EOL)('\n')(417,418)
  PsiElement(ElixirTokenType.NUMBER)('0.0e-1')(418,424)